[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "0.1.0"
description = ""
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]
repository = "{{cookiecutter.repo}}"

[tool.poetry.dependencies]
python = "3.8"



[tool.poetry.dev-dependencies]



[tool.taskipy.tasks]
export = "poetry update; poetry export --without-hashes -f requirements.txt > requirements.txt"
export_base = "cp requirements.txt requirements_base.txt"
pre_export_base = "task export;"
cache_clear = "poetry cache clear"
push = "git commit -a -m 'Update'; git push"

ansible = "python ./provision/ansible_helper.py"
build = "task init; task docker_build"
init = "task ansible play -p init"
init_vault = "task ansible play -p init_vault --no-vault"

docker_build = ""
docker_run = ""
docker_runit = ""

[tool.{{ cookiecutter.project_name } }.tasks]
docker_build = """
docker image build -t {{image_fullname}}
                  --target {{build_target}}
                  --build-arg USER_ID={{ansible_user_uid}}
                  --build-arg GROUP_ID={{ansible_user_gid}}
                  --build-arg USERNAME={{ansible_user_id}}
                  --build-arg PROJECT_DIR={{project_folder}}
                  {{project_folder}}
"""

docker_run = """
docker run -it --rm
            --env-file .env
            -v {{project_folder|quote}}:{{project_folder|quote}}
            -w {{project_folder|quote}}
            {{image_fullname}}
"""

docker_runit = """
docker run -it --rm
            --user root
            --env-file .env
            -v {{project_folder|quote}}:{{project_folder|quote}}
            -w {{project_folder|quote}}
            {{image_fullname}}
            bash
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
