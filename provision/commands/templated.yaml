default:
  docker_build: >-
    docker image build -t ${image_fullname}
    --target ${build_target}
    --build-arg USER_ID=${ansible_user_uid}
    --build-arg GROUP_ID=${ansible_user_gid}
    --build-arg USERNAME=${ansible_user_id}
    --build-arg PROJECT_DIR=${project_folder}
    ${project_folder}
    "$@"

  docker_run: >-
    docker run
    --env-file .env 
    --shm-size="8g"
    --volume "/etc/group:/etc/group:ro"
    --volume "/etc/passwd:/etc/passwd:ro"
    --volume "/etc/shadow:/etc/shadow:ro"
    --volume "/etc/sudoers.d:/etc/sudoers.d:ro"
    --workdir ${project_folder}
    ${eval:"' '.join(['--env '+k+'='+str(v) for k, v in docker.service.environment.items()])"}
    ${eval:"' '.join(['--volume '+':'.join([v]*2) for v in volumes])",
    "volumes=
    list(settings['PROJECT']['dirs'].values())+
    [project_folder]"
    }
    --network ${eval: "list(definition.networks.keys())[0]", "definition=docker.infra.definition"}
    "$@"

production:
  docker_run: >-
    docker run
    --env-file .env
    --shm-size="8g"
    --volume "/etc/group:/etc/group:ro"
    --volume "/etc/passwd:/etc/passwd:ro"
    --volume "/etc/shadow:/etc/shadow:ro"
    --volume "/etc/sudoers.d:/etc/sudoers.d:ro"
    --workdir ${project_folder}
    ${eval:"' '.join(['--env '+k+'='+str(v) for k, v in docker.service.environment.items()])"}
    ${eval:"' '.join(['--volume '+':'.join([v]*2) for v in volumes])",
    "volumes=
    list(settings['PROJECT']['dirs'].values())"
    }
    --network ${eval: "list(definition.networks.keys())[0]", "definition=docker.infra.definition"}
    "$@"