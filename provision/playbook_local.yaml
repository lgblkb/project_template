- hosts: all
  become: no
  vars:
    secret_path: ".secret"
    project_folder: "{{playbook_dir|dirname}}"
    env_folder: "{{project_folder}}/provision/envs/{{env_name}}"
  tasks:
    - name: Check .secret existence
      stat:
        path: "{{secret_path}}"
      register: secret_path_existence

    - name: Generate ansible secret
      shell: |
        python3 -c "
        import os
        from secrets import choice
        import string

        password_length = 32
        alphabet = string.ascii_letters + string.digits
        password = ''.join(choice(alphabet) for i in range(password_length))

        filename = '{{secret_path}}'
        assert not os.path.exists(filename)
        with open(filename, 'w') as file:
            file.write(password)"
      when: not secret_path_existence.stat.exists

    - name: Run base tasks
      include_role:
        name: base
        apply:
          tags: ['base']

    - name: Add build task
      manage_toml:
        path: "{{project_folder}}/pyproject.toml"
        data:
          tool:
            taskipy:
              tasks:
                build: >-
                  docker image build -t {{image_name}}:{{image_tag}}
                  --target {{build_target}}
                  --build-arg USER_ID={{ansible_user_uid}}
                  --build-arg GROUP_ID={{ansible_user_gid}}
                  --build-arg USERNAME={{ansible_user_id}}
                  --build-arg PROJECT_DIR={{project_folder}}
                  {{project_folder}}

    - name: Add run task
      manage_toml:
        path: "{{project_folder}}/pyproject.toml"
        data:
          tool:
            taskipy:
              tasks:
                run: >-
                  docker run -it --rm
                  --env-file .env
                  -v {{project_folder|quote}}:{{project_folder|quote}}
                  -w {{project_folder|quote}}
                  {{image_name}}:{{image_tag}}
